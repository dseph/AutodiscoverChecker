*** Autodiscover Checker ***

This is sample code and there are no implied warrenties or guarentees as to its behavior. If you use this app or its 
code, you need to take 100% responsibility for its code and its usage. Its considered to be unsupported sample code
which demonstrates the concept of doing Autodiscovery with the Exchange Manged API and custom code and should only be used in a 
lab environment. 

For external autodiscovery and connectivity checker, be sure to look at the Remote Connectivity Analyzer.

	Remote Connectivity Analyzer
	https://www.testexchangeconnectivity.com/

Keep in  mind that Autodiscover is a series of auto-discovering processes.  If one process fails then code should normally move on to the next 
process.  This continues until a CAS end-point for the mailbox is found or all processes have been performed.  The code in this large sample
tries to beak-down the process and provide details on the processing.  The normal process is SCP Lookups -> External POX  
lookups (see Micosoft documentation for details). The more recent versions of Exchange (2010 and 2013) also support a SOAP POST for Autodiscover.

Here are some references:

	http://msdn.microsoft.com/en-us/library/exchange/jj900169(v=exchg.150).aspx
	http://technet.microsoft.com/en-us/library/bb124251(v=exchg.150).aspx
	http://msdn.microsoft.com/en-us/library/exchange/jj900169(v=exchg.150).aspx

 NOTE:  All results are returend as a complete set. You should be prepared for a wait of up to several 
        minutes before results are displayed.

---- Autodiscover Checker 1.0 8/18/2011 -------------------------------

This tool allows you to test Autodiscover from the standpoint of an application 
running on an in-network machine. Since the Connectivity Analyzer is web-based,
it does not provide testing for internal look-ups.  This application uses the
Exchange Managed API 1.1 to do autodiscovery and pull information from the 
Autodiscovery Web Service.  

This tool allows you to try Autodiscovery to do these things and more:

	Autodiscovery with existing or specified credentials.
	Not autodiscover using AD stored Exchange URLs (This is the SCP setting).
	Pre-Authenticate calls.
	Specify Exchange version.

This tool will provide the following information:

	Certificates used and certificate issues.
	Redirects (if there are any)
	Trace Log of EWS calls by the Exchange Managed API.
	List of User Options returned from Autodiscovery

Exchange Managed API Checker
----------------------------
This window uses the Exchange Managed API for doing its tests.  There is one which goes against the web service directly 
by calling GetUserSettings() and another which works off of of a service object. There is an issue when an email address
changes during redirection that the 2.0 Exchagne MAnaged API is having some issues with and I have added code to this tool
to do a work-around.

Raw Code Checker
----------------
This windows has code to do SCP, POX and SOAP autodiscover processes.  The primary code used for POX and SCP came 
from the Microsoft Exchange WebServices SDK for Exchange 2010 (September 2011).  

 
SCP Checker:
------------
The SCP Checker does two things. First it has a button to list all the CAS servers it finds in AD.  The second button will gather the same
list as the first button AND will do a test POST to every URL in order to gather the time it took to complete the POST and it will also 
provide the results of that POST. The scond button's code many take many minutes to finish.

---- Notes -------------------------------
Read the following below before running:

SCPLook-up should be set to True when the code runs in an intranet environment.  
This feature controls access to published Exchnage URLs by Active Directory.
When trying to Autodiscover to an external Exchange server, SCPLook should be set to False
so that the internal Active directories do not get pinged - this saves time in the
Autodiscovery process.  This file never gets cleared or removed, so if you want a clear 
trace then you need to delete it between runs of the application.
When run, a file called network.log will be created and appended to.  This log file contains 
details of the EWS calls.  When diagnosing issues you may wish to delete the file in order to see 
the traffic from just one test. If you don't want the logging being done to this file, you will need
to modify the app.config file.  You will probably want to delete the log file generated from time to
time as it is not truncated or deleted by the application.


What is not handled yet: 
------------------------
There are is no code currently to do DNS Srv record lookups - this may be added in the future.
I'm planning on adding additional logging of the actual requests and responses.
Planning on further clean-up of the code.
 

===================================================================================================
History:

---- Autodiscover Checker 1.0 8/18/2011 -------------------------------
Initial Autodiscover testing by using the Exchange Manaaged API to go directly agaisnt the Autodiscover service.

---- Autodiscover Checker 1.1 12/8/2011 -------------------------------

Cleaned-up code.
Added entry error checking.
Added code to disable and enable authentication fields.
Added Help.
Updated Readme

---- Autodiscover Checker 1.2 -------------------------------
5/16/2013
It will now include the 2.0 EWS Managed API - no need to install it seperately.
Added code to do SCP, POX and SOAP-POST Autodiscover.  This is all cusom code and does not use the managed API.

Not released yet

5/21/2013:
Added code to also do autodiscover off of a service object as an additional test.

Not released yet

5/22/2013:
For the managed API calls it will check the number of redirects to see if it seems to be 
looping - its hard coded to a max of 5 redirects.

Added SCP Checker.

Cleaned-up code.

Not released yet

6/12/2013:
Code which does testing using the Exchange Managed API will now handle address changes during the redirect.
A checkbox has been added to control this work-around being used.  The current work-around will handle one
address change during redirection.

Not released yet

6/18/2013:
Fixed some issues with POX.
Made Raw Code trace certs unchecked by default
Raw POX code will handle an address redirect.

2.0 released

6/19/2013:
Cleaned-up logging and made it more complete. The overall flow of logging has been improved.
Error logging now outputs stack trace.
Fixed spelling errors.

2.1 released

 
6/21/2013:
Added color schema
Results fields are read only
If you doulbe-click on a results box it will display the results in another window which is editable
Results fields clear at the beginning of a run.
Cleaned-up logging
Made logging more clear - especiallly for scp lookups and certificates.
Removed some unused code.
 
 2.2 released


 xxx

 app.config

 <?xml version="1.0"?>
<configuration>
  <system.diagnostics>
    <trace autoflush="true" indentsize="4"/> 
    <sources>
      <source name="System.Net">  
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
      <source name="System.Net.HttpListener">
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
      <source name="System.Net.Sockets">
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
      <source name="System.Net.Cache">
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
      <source name="System.Web.Cache">
        <listeners>
          <add name="System.Web"/>
        </listeners>
      </source>
    </sources>
  
    <switches>
      <add name="System.Net" value="Verbose"/>
      <add name="System.Net.Sockets" value="Verbose"/>
      <add name="System.Net.Cache" value="Verbose"/>
      <add name="System.Net.HttpListener" value="Verbose"/>
    </switches>

    <sharedListeners>
      <add name="System.Net" type="System.Diagnostics.TextWriterTraceListener" initializeData="network.log"/>
    </sharedListeners>

  </system.diagnostics>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>

